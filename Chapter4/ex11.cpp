/*
    Напишите программу, находящую все простые числа между 1 и 100. Для этого можно написать функцию, 
    проверяющую, является ли число простым (т.е. делится ли оно на простое числое, не превосходящее
    данное), используя вектор простых чисел, записанный в порядке возрастания (например, если вектор
    называется primes, то primes[0] == 2, primes[1] == 3, primes[2] == 5 и т.д.). Напишите цикл 
    перебора чисел от 1 до 100, проверьте каждое из них на простоту и сохраните найденные простые
    числа в векторе. Напишите другой цикл, в котором все найденные простые числа выводятся на экран.
    Сравните полученные результаты с вектором primes. Первым простым числом считается число 2.

    P.S. Как по мне, задание сформировано максимально бредово и не понятно. Чтобы выяснить, является
    ли число простым, можно с помощью двух вложенных циклов найти количество делителей числа: если
    у числа два делителя (единица и само число), то число является простым, в противном случае число
    простым не является. 
*/

#include <iostream>
#include <vector>

const std::vector<int> primes = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};

bool isPrime(int number)
{
    bool result = false;
    int i = primes.size() - 1;
    while(number <= primes[i])
    {
        if (number % primes[i] == 0)
        {
            result = true;
            break;
        }
        i--;
    }
    return result;
}

int main()
{
    std::vector<int> primeNums;
    for (int i = 1; i <= 100; ++i)
    {
        if (isPrime(i))
        {
            primeNums.push_back(i);
        }
    }
    for (int num : primeNums)
    {
        std::cout << num << '\n';
    }
    return 0;
}
