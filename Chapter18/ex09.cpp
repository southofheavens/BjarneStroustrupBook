/*
    Проанализируйте схему распределения памяти, описанную в разделе 17.4. Напишите программу, сообщающую,
    в каком порядке располагаются статическая память, стек и динамическая память. В каком направлении
    растет стек: в сторону старших или младших адресов? Допустим, массив расположен в динамической
    памяти. Какой элемент будет иметь бОльший адрес - с бОльшим индексом или с меньшим?
 
    Стек растет в сторону младших адресов. Если массив расположен в динамической памяти, то бОльший
    адрес будет иметь элемент с бОльшим индексом.
*/

#include <iostream>

static int globalArr[3] {1,2,3};

void CheckStack(int& var)
{
    while (var < 3)
    {
        int someVar;
        std::cout << &someVar << '\n';
        var++;
        CheckStack(var);
    }
}

int main()
{
    std::cout << "Статические данные:\n";
    for (int i = 0; i < 3; ++i) {
        std::cout << &globalArr[i] << '\n';
    }
    
    std::cout << "\nСтек:\n";
    int i = 0;
    CheckStack(i);
    
    int* heap = new int[3] {1,2,3};
    std::cout << "\nДинамическая память:\n";
    for (int i = 0; i < 3; ++i) {
        std::cout << &heap[i] << '\n';
    }
    delete[] heap;
        
    return 0;
}
