/*
    Задание с вектором из стандартной библиотеки
    1. Определите глобальный вектор vector<int> gv; инициализируйте его десятью целыми числами 1, 2, 4, 8,
    16 и т.д.
    2. Определите функцию f(), принимающую аргумент типа vector<int>.
    3. В функции f() сделайте следующее.
        - Определите локальный вектор vector<int> lv с тем же количеством элементов, что и вектор,
        являющийся аргументом функции.
        - Скопируйте значения из вектора gv в вектор lv.
        - Выведите на печать элементы вектора lv.
        - Определите локальный вектор vector<int> lv2; инициализируйте его так, чтобы он стал копией вектора,
        являющегося аргументом функции.
        - Выведите на печать элементы вектора lv2.
    4. В функции main() сделайте следующее.
        - Вызовите функцию f() с аргументом gv.
        - Определите вектор vector<int> vv и инициализируйте его первыми десятью значениями факториала (1, 2*1, 
        3*2*1, 4*3*2*1 и т.д.).
        - Вызовите функцию f() с аргументом vv.
*/

#include <iostream>
#include <vector>

std::vector<int> gv{1,2,4,8,16,32,64,128,256,512};

void F(std::vector<int> vec)
{
    std::vector<int> lv(vec.size());
    lv = vec;
    for (int i = 0; i < lv.size(); ++i)
    {
        std::cout << lv[i];
        i != lv.size() - 1 ? std::cout << ' ' : std::cout << '\n';
    }
    std::vector<int> lv2{vec};
    for (int i = 0; i < lv2.size(); ++i)
    {
        std::cout << lv2[i];
        i != lv2.size() - 1 ? std::cout << ' ' : std::cout << '\n';
    }
}

int Factorial(int n)
{
    return n > 1 ? n * Factorial(n - 1) : 1;
}

int main()
{
    F(gv);
    std::vector<int> vv(10);
    for (int i = 0; i < 10; ++i)
    {
        vv[i] = Factorial(i + 1);
    }
    F(vv);
    return 0;
}
